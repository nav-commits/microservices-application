package com.example.demo;



import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;
import org.springframework.web.bind.annotation.RequestBody;

@CrossOrigin(origins="http://localhost:3000")
@RestController
public class ProductsInfoController {

	
	@Autowired
	ProductInfoRepository productInfoRepository;
	
	@Autowired
	private RestTemplate restTemplate;
	
	// create a ProductPricing
	@PostMapping("/ProductInfo")
	public ProductInfo createProductPricing(@RequestBody ProductInfo productInfo) {
		productInfoRepository.save(productInfo);
		return productInfo;
	}
	

	// get product pricing by productid
	@GetMapping("/ProductInfo/{userid}")
	public List<ProductInfo> getProductPrice(@PathVariable int userid) {
	
//		  List<ProductInfo> productinfo = new ArrayList<>(Arrays.asList(
//		  new ProductInfo((long) 50,"https://cdn.shopify.com/s/files/1/1880/7069/products/adidas-Men_sGermanyHomeJersey_EH6105_-01_900x.jpg?v=1631539776","Men's Germany Soccer Jersey",1,150),
//		  new ProductInfo((long) 200,"https://cdn.shopify.com/s/files/1/1880/7069/products/adidas-Men_sGermanyHomeJersey_EH6105_-01_900x.jpg?v=1631539776","Men's Germany Soccer Jersey",1,50)
//					
//		));
		  
		  //step 1 call the productpricing microservice
		  String uriProductPricing = "http://localhost:8084/ProductPricing/" + userid;
		  UsersProductsPricing usersProductsPricing = restTemplate.getForObject(uriProductPricing, UsersProductsPricing.class);	
		
		
		// step 2 loop over usersProductPricing array and get the price
		return usersProductsPricing.getUsersProductsPricing().stream().map(productpricing -> {
			ProductInfo productinfo = restTemplate.getForObject(
					"http://localhost:8082/Product/ProductInfo/" + productpricing.getProductid(), ProductInfo.class);
		return new ProductInfo(productpricing.getProductid(),productinfo.getImageurl(),productinfo.getImageurl(), productinfo.getQuantity(), productpricing.getPrice());
		}).collect(Collectors.toList());
		
	}
	
	
	   // find a productinfo by productid
	    @GetMapping("/Product/ProductInfo/{productid}")
	    public ProductInfo getProductInfo(@PathVariable Long productid) {
		System.out.println("Product ID:" + productid);
		return productInfoRepository.findById(productid).orElse(null);

	}
	


}
